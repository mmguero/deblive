name: iso-build-docker-wrap-push-ghcr

on:
  push:
    branches:
      - 'master'
    paths:
      - 'bullseye/**'
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      packages: write
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      -
        name: Cancel previous run in progress
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build environment setup
        run: |
          sudo apt-get -q update
          sudo env DEBIAN_FRONTEND=noninteractive apt-get install -t focal-backports --no-install-recommends -y -q \
               apt-transport-https \
               bc \
               build-essential \
               ca-certificates \
               curl \
               debhelper-compat \
               debootstrap \
               genisoimage \
               gettext \
               git \
               gnupg2 \
               jq \
               po4a \
               rsync \
               software-properties-common \
               squashfs-tools \
               xorriso
            git clone --depth=1 --single-branch --recurse-submodules --shallow-submodules --branch='debian/1%20210407' 'https://salsa.debian.org/live-team/live-build.git' /tmp/live-build
            cd /tmp/live-build
            dpkg-buildpackage -b -uc -us
            sudo dpkg -i /tmp/live-build*.deb
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Build image
        run: |
          export IMAGE_DISTRIBUTION=bullseye
          sed -i "s/^[[:space:]]*#*[[:space:]]*\(export[[:space:]]*CHECKSUM_RELEASE=\).*/\1false/" $IMAGE_DISTRIBUTION/vars.txt
          cat $IMAGE_DISTRIBUTION/vars.txt
          sudo /usr/bin/env bash ./build.sh "$IMAGE_DISTRIBUTION"
      -
        name: Docker build setup
        uses: docker/setup-buildx-action@v1
      -
        name: ghcr.io login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push server image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/deblive:latest
