name: iso-build-wrap-push-ghcr

on:
  push:
    branches:
      - 'master'
    paths:
      - 'bookworm/**'
  workflow_dispatch:
  repository_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/deblive
  IMAGE_TAG: latest
  IMAGE_PLATFORM: linux/amd64
  REPO_CONTEXT: .
  REPO_CONTAINERFILE: ./docker/Dockerfile

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      packages: write
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      -
        name: Cancel previous run in progress
        id: cancel-previous-runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build environment setup
        id: build-env-setup
        run: |
          sudo apt-get -q update
          sudo env DEBIAN_FRONTEND=noninteractive apt-get install -t jammy-backports --no-install-recommends -y -q \
               apt-transport-https \
               bc \
               build-essential \
               ca-certificates \
               curl \
               debhelper-compat \
               debootstrap \
               debian-archive-keyring \
               genisoimage \
               gettext \
               git \
               gnupg2 \
               jq \
               po4a \
               rsync \
               software-properties-common \
               squashfs-tools \
               xorriso
            git clone --depth=1 --single-branch --recurse-submodules --shallow-submodules --branch='debian/1%20230131' 'https://salsa.debian.org/live-team/live-build.git' /tmp/live-build
            cd /tmp/live-build
            dpkg-buildpackage -b -uc -us
            sudo dpkg -i /tmp/live-build*.deb
      -
        name: Checkout
        id: repo-checkout
        uses: actions/checkout@v3
      -
        name: Build ISO image
        id: build-iso-image
        run: |
          export IMAGE_DISTRIBUTION=bookworm
          cat $IMAGE_DISTRIBUTION/vars.txt
          [[ ${#GITHUB_TOKEN} -gt 1 ]] && echo "GITHUB_TOKEN=$GITHUB_TOKEN" >> ./environment.chroot
          echo "VCS_REVSION=$( git rev-parse --short HEAD 2>/dev/null || echo master )" >> ./environment.chroot
          sudo /usr/bin/env bash ./build.sh "$IMAGE_DISTRIBUTION"
          rm -f ./environment.chroot
      -
        name: Log in to registry
        id: registry-login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build container image
        id: build-container-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}
          context: ${{ env.REPO_CONTEXT }}
          containerfiles: |
            ${{ env.REPO_CONTAINERFILE }}
          platforms: |
            ${{ env.IMAGE_PLATFORM }}
      -
        name: Push
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-container-image.outputs.image }}
          tags: ${{ steps.build-container-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
