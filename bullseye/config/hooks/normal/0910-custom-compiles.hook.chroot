#!/bin/bash

OPENRESOLV_VER="3.12.0"
OPENRESOLV_URL="https://roy.marples.name/downloads/openresolv/openresolv-$OPENRESOLV_VER.tar.xz"

RESPONDER_VER="3.0.6.0"
RESPONDER_URL="https://github.com/lgandx/Responder/archive/v${RESPONDER_VER}.tar.gz"

BURPSUITE_VER="2021.8.2"
BURPSUITE_URL="https://portswigger.net/burp/releases/download?product=community&version=${BURPSUITE_VER}&type=jar"

BRUTESHARK_URL="https://github.com/odedshimon/BruteShark/releases/latest/download/BruteSharkCli"

GHIDRA_URL="https://ghidra-sre.org/ghidra_9.2.2_PUBLIC_20201229.zip"
SYNERGY_URL="https://filedn.com/lqGgqyaOApSjKzN216iPGQf/Software/Linux/synergy_debian_amd64.deb"
UDPTUNNEL_URL="https://codeload.github.com/rfc1036/udptunnel/tar.gz/master"

# podman
curl -o /usr/local/bin/podman-compose https://raw.githubusercontent.com/containers/podman-compose/devel/podman_compose.py
chmod 755 /usr/local/bin/podman-compose
ln -s -r /usr/bin/podman /usr/local/bin/docker

# vagrant
curl -o /tmp/vagrant.deb "https://releases.hashicorp.com$(curl -fsL "https://releases.hashicorp.com$(curl -fsL "https://releases.hashicorp.com/vagrant" | grep 'href="/vagrant/' | head -n 1 | grep -o '".*"' | tr -d '"' )" | grep "x86_64\.deb" | head -n 1 | grep -o 'href=".*"' | sed 's/href=//' | tr -d '"')"
dpkg -i /tmp/vagrant.deb
rm -f /tmp/vagrant.deb

# Install openresolv (version in repos is out of date)
curl -L -o "openresolv-$OPENRESOLV_VER.tar.xz" "$OPENRESOLV_URL"
tar xvf "openresolv-$OPENRESOLV_VER.tar.xz"
cd "openresolv-$OPENRESOLV_VER"/
./configure --prefix=/
make
# make install
checkinstall -y -D --strip=yes --stripso=yes --install=yes --fstrans=no --pkgname="openresolv" --pkgversion="$OPENRESOLV_VER" --pkgarch="amd64" --pkgsource="$OPENRESOLV_URL"
cd ../
rm -rf "openresolv-$OPENRESOLV_VER.tar.xz" "openresolv-$OPENRESOLV_VER"
###

# Install responder.py
curl -L -o "Responder-${RESPONDER_VER}.tar.gz" "$RESPONDER_URL"
tar -xvzf Responder-${RESPONDER_VER}.tar.gz
mv ./Responder-${RESPONDER_VER} /opt/responder
rm -Rf Responder-${RESPONDER_VER}.tar.gz
ln -s /opt/responder/Responder.py /usr/local/bin/Responder.py
###

# burpsuite
mkdir -p /opt/burpsuite
curl -L -o "/opt/burpsuite/burpsuite_community_v${BURPSUITE_VER}.jar" "$BURPSUITE_URL"

# BruteShark
# Create a symbolic link between libpcap.so and the actual libpcap file (e.g. libpcap.so.0.8)
find /usr/lib/x86_64-linux-gnu -type f -name "libpcap.so.*" | head -1 | xargs -i ln -s -r "{}" /usr/lib/x86_64-linux-gnu/libpcap.so
curl -L -o /usr/local/bin/BruteSharkCli "$BRUTESHARK_URL"
chmod 755 /usr/local/bin/BruteSharkCli

# ghidra (commented out for now because it's huge)
# curl -L -o "/tmp/ghidra.zip" "$GHIDRA_URL"
# unzip "/tmp/ghidra.zip" -d "/opt"
# rm -f "/tmp/ghidra.zip"

# synergy
curl -L -o "/tmp/synergy_debian_amd64.deb" "$SYNERGY_URL"
dpkg -i "/tmp/synergy_debian_amd64.deb"
rm -f "/tmp/synergy_debian_amd64.deb"

# veracrypt
curl -L -o "/tmp/veracrypt-console-Debian-10-amd64.deb" "$(curl -sSL https://www.veracrypt.fr/en/Downloads.html | grep -Pio 'https://.+?veracrypt-console.+?Debian-10-amd64.deb' | sed "s/&#43;/+/" | head -n 1)"
dpkg -i "/tmp/veracrypt-console-Debian-10-amd64.deb"
rm -f "/tmp/veracrypt-console-Debian-10-amd64.deb"

# udptunnel
curl -L -o "/tmp/udptunnel.tar.gz" "$UDPTUNNEL_URL"
cd /tmp
mkdir udptunnel
tar xvf ./udptunnel.tar.gz -C ./udptunnel --strip-components 1
cd ./udptunnel
make
make install
cd /tmp
rm -rf /tmp/udptunnel*

# x11docker
curl -fsSL https://raw.githubusercontent.com/mviereck/x11docker/master/x11docker | bash -s -- --update

# git and libsecret credential caching
make --directory=/usr/share/doc/git/contrib/credential/libsecret

###